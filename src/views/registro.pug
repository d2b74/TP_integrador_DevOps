extends index

block content
  .container.mt-5
    h1.text-center Registro de Usuario

    form(action="/usuarios/registro" method="POST" class="needs-validation" onsubmit="return manejarRegistroUsuario(this);")
      .form-group
        label(for="rol") Rol:
        select.form-control(name="rol" id="rol" required onchange="toggleAdditionalFields();")
          option(value="" disabled selected) Selecciona un rol
          option(value="estudiante") Estudiante
          option(value="profesor") Profesor
          option(value="tutor") Tutor
          option(value="administrativo") Administrativo

      .form-group
        label(for="nombres") Nombres:
        input.form-control(type="text" name="nombres" required placeholder="Juan Carlos")
      
      .form-group
        label(for="apellidos") Apellidos:
        input.form-control(type="text" name="apellidos" placeholder="Pérez López")

      .form-group
        label(for="edad") Edad:
        input.form-control(type="number" name="edad" placeholder="25" min="1" max="100")

      .form-group
        label(for="correo") Correo Electrónico:
        input.form-control(type="email" name="correo" placeholder="example@email.com" required)

      .form-group
        label(for="dni") DNI:
        input.form-control(type="number" name="dni" placeholder="12345678" required min="0")

      .form-group
        label(for="password") Contraseña:
        input.form-control(type="password" name="password" id="password" required placeholder="******")

      .additional-fields(id="estudianteFields" style="display:none")
        .form-group
          label(for="grado") Grado:
          select.form-control(name="grado" id="grado")
            option(value="" disabled selected) Selecciona un Grado 
            option(value="1") 1°
            option(value="2") 2°
            option(value="3") 3°
            option(value="4") 4°
            option(value="5") 5°
            option(value="6") 6°
        
        .form-group
          label(for="turno") Turno:
          select.form-control(name="turno" id="turno")
            option(value="" disabled selected) Selecciona un Turno
            option(value="maniana") Mañana
            option(value="tarde") Tarde

        .form-group
          label(for="nivel") Nivel:
          select.form-control(name="nivel" id="nivel")
            option(value="" disabled selected) Selecciona un Nivel
            option(value="primaria") Primaria
            option(value="secundaria") Secundaria

        .form-group
          label(for="dniTutor") DNI del Tutor:
          input.form-control(type="number" name="dniTutor" id="dniTutor" placeholder="DNI del Tutor" min="0")

      .additional-fields(id="tutorFields" style="display:none")
        .form-group
          label(for="dniEstudiante") DNI del Estudiante:
          input.form-control(type="number" name="dniEstudiante" id="dniEstudiante" placeholder="DNI del Estudiante" min="0")

      // Botón submit
      button.btn.btn-primary(type="submit" id="submitBtn") Registrar

    script.
      function toggleAdditionalFields() {
        var rol = document.getElementById("rol").value;
        var studentFields = document.getElementById("estudianteFields");
        var tutorFields = document.getElementById("tutorFields");

        if (rol === "estudiante") {
          studentFields.style.display = "block";
          tutorFields.style.display = "none";
          toggleRequiredFields(studentFields, true);
          toggleRequiredFields(tutorFields, false);
        } else if (rol === "tutor") {
          studentFields.style.display = "none";
          tutorFields.style.display = "block";
          toggleRequiredFields(studentFields, false);
          toggleRequiredFields(tutorFields, true);
        } else {
          studentFields.style.display = "none";
          tutorFields.style.display = "none";
          toggleRequiredFields(studentFields, false);
          toggleRequiredFields(tutorFields, false);
        }
      }

      function toggleRequiredFields(container, isRequired) {
        const inputs = container.querySelectorAll('input, select');
        inputs.forEach(input => {
          if (isRequired) {
            input.setAttribute('required', 'required');
          } else {
            input.removeAttribute('required');
          }
        });
      }

    script.
      function manejarRegistroUsuario(form) {
        const formData = new FormData(form);
        const data = {};
        formData.forEach((value, key) => {
          data[key] = value;
        });

        fetch(form.action, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(data),
        })
          .then(response => response.json())
          .then(result => {
            if (!result.success) {
              if (result.errors) {
                // Muestra todos los mensajes de error
                const mensajes = result.errors.map(err => err.msg).join('\n');
                alert(`Errores:\n${mensajes}`);
              } else {
                // Error general
                alert(`Error: ${result.message}`);
              }
            } else {
              // Éxito
              alert(result.message);
              location.reload();
            }
          })
          .catch(error => {
            console.error('Error al registrar el usuario:', error);
            alert('Error al registrar el usuario');
          });

        return false; // Prevenir el comportamiento predeterminado del formulario
      }

